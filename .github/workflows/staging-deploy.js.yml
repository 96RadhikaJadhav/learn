name: Staging Deployment

on:
  pull_request_review:
    types: [submitted]
    branches: ['staging']

jobs:
  build-staging:

    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: frontend

    strategy:
      matrix:
        python-version: [3.x]
        node-version: [10.x]

    steps:

    - uses: actions/cache@v2
      with:
        path: ./cached_gnat
        key: ${{ runner.os }}-gnat-ce-2020

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: ada-actions/toolchain
      uses: ada-actions/toolchain@ce2020
      with:
        distrib: community
        target: native
        community_year: 2020
        install_dir: ./cached_gnat

    - name: Install OS Deps
      run: |
        sudo apt-get install -y \
        graphviz \
        texlive-latex-base \
        texlive-latex-recommended \
        texlive-latex-extra \
        texlive-fonts-recommended \
        texlive-fonts-extra \
        latexmk \
        texlive-xetex \
        fonts-lmodern \
        fonts-open-sans \
        fonts-dejavu

    - name: Install npm dependencies
      run: yarn --frozen-lockfile

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build staging site
      run: make site-staging

    - name: Upload built site artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-staging
        path: dist

  deploy-staging:

    runs-on: ubuntu-latest
    steps:

    - name: Download built site artifact
      uses: actions/download-artifact@v2
      with:
        name: build-staging

    - name: Clone learn-staging-html-pages
      uses: actions/checkout@v2
      with:
        repository: AdaCore/learn-staging-html-pages
        token: ${{ secrets.GitHub_PAT }}
        ref: gh-pages
        path: learn-staging-html-pages

    - name: Clean learn-staging-html-pages
      run: |
        rm -rf *
        git checkout CNAME
      working-directory: learn-staging-html-pages

    - name: Copy build artifacts to deployment repo
      run: |
        cp -R build-staging/html/. learn-staging-html-pages/
        cp -R build-staging/pdf_books learn-staging-html-pages/

    - name: Push learn-staging-html-pages
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@github.com"
        git add -A
        git commit -m "GitHub Actions Deployment: $GITHUB_SHA"
        git push
      working-directory: learn-staging-html-pages
